( define ( domain citycar ) ( :requirements :typing :equality :negative-preconditions :action-costs :conditional-effects ) ( :types car junction garage road ) ( :predicates ( same_line ?xy - junction ?xy2 - junction ) ( diagonal ?x - junction ?y - junction ) ( at_car_jun ?c - car ?x - junction ) ( at_car_road ?c - car ?x - road ) ( starting ?c - car ?x - garage ) ( arrived ?c - car ?x - junction ) ( road_connect ?r1 - road ?xy - junction ?xy2 - junction ) ( clear ?xy - junction ) ( in_place ?x - road ) ( at_garage ?g - garage ?xy - junction ) ) ( :functions ( total-cost ) - number ) ( :action move_car_in_road :parameters ( ?xy_initial - junction ?xy_final - junction ?machine - car ?r1 - road ) :precondition ( and ( at_car_jun ?machine ?xy_initial ) ( road_connect ?r1 ?xy_initial ?xy_final ) ( in_place ?r1 ) ) :effect ( and ( clear ?xy_initial ) ( at_car_road ?machine ?r1 ) ( increase ( total-cost ) 1 ) ) ) ( :action move_car_out_road :parameters ( ?xy_initial - junction ?xy_final - junction ?machine - car ?r1 - road ) :precondition ( and ( at_car_road ?machine ?r1 ) ( clear ?xy_final ) ( road_connect ?r1 ?xy_initial ?xy_final ) ( in_place ?r1 ) ) :effect ( and ( at_car_jun ?machine ?xy_final ) ( increase ( total-cost ) 1 ) ) ) ( :action car_arrived :parameters ( ?xy_final - junction ?machine - car ) :precondition ( and ( at_car_jun ?machine ?xy_final ) ) :effect ( and ( clear ?xy_final ) ( arrived ?machine ?xy_final ) ) ) ( :action car_start :parameters ( ?xy_final - junction ?machine - car ?g - garage ) :precondition ( and ( at_garage ?g ?xy_final ) ( starting ?machine ?g ) ( clear ?xy_final ) ) :effect ( and ( at_car_jun ?machine ?xy_final ) ) ) ( :action build_diagonal_oneway :parameters ( ?xy_initial - junction ?xy_final - junction ?r1 - road ) :precondition ( and ( clear ?xy_final ) ( diagonal ?xy_initial ?xy_final ) ) :effect ( and ( road_connect ?r1 ?xy_initial ?xy_final ) ( in_place ?r1 ) ( increase ( total-cost ) 30 ) ) ) ( :action build_straight_oneway :parameters ( ?xy_initial - junction ?xy_final - junction ?r1 - road ) :precondition ( and ( clear ?xy_final ) ( same_line ?xy_initial ?xy_final ) ) :effect ( and ( road_connect ?r1 ?xy_initial ?xy_final ) ( in_place ?r1 ) ( increase ( total-cost ) 20 ) ) ) ( :action destroy_road :parameters ( ?xy_initial - junction ?xy_final - junction ?r1 - road ) :precondition ( and ( road_connect ?r1 ?xy_initial ?xy_final ) ( in_place ?r1 ) ) :effect ( and ( increase ( total-cost ) 10 ) ( forall ( ?c1 - car ) ( when ( at_car_road ?c1 ?r1 ) ( and ( at_car_jun ?c1 ?xy_initial ) ) ) ) ) ) )