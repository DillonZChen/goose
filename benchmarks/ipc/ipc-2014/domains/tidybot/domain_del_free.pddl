( define ( domain TIDYBOT ) ( :requirements :strips :typing :equality ) ( :types robot cart object xc yc xrel yrel ) ( :predicates ( leftof ?x1 - xc ?x2 - xc ) ( above ?y1 - yc ?y2 - yc ) ( leftof-rel ?x1 - xrel ?x2 - xrel ) ( above-rel ?y1 - yrel ?y2 - yrel ) ( sum-x ?x - xc ?xr - xrel ?xsum - xc ) ( sum-y ?y - yc ?yr - yrel ?ysum - yc ) ( zerox-rel ?x - xrel ) ( zeroy-rel ?y - yrel ) ( object-goal ?o - object ?x - xc ?y - yc ) ( parked ?r - robot ) ( base-pos ?r - robot ?x - xc ?y - yc ) ( base-obstacle ?x - xc ?y - yc ) ( object-pos ?o - object ?x - xc ?y - yc ) ( object-done ?o - object ) ( surface ?x - xc ?y - yc ) ( holding ?r - robot ?o - object ) ( gripper-empty ?r - robot ) ( gripper-rel ?r - robot ?x - xrel ?y - yrel ) ( gripper-obstacle ?x - xc ?y - yc ) ( pushing ?r - robot ?c - cart ) ( not-pushing ?r - robot ) ( not-pushed ?c - cart ) ( cart-pos ?c - cart ?x - xc ?y - yc ) ( on-cart ?o - object ?c - cart ) ) ( :action unpark :parameters ( ?r - robot ?x - xrel ?y - yrel ) :precondition ( and ( parked ?r ) ( gripper-rel ?r ?x ?y ) ( zerox-rel ?x ) ( zeroy-rel ?y ) ) :effect ) ( :action park :parameters ( ?r - robot ) :precondition ( and ( not-pushing ?r ) ) :effect ( parked ?r ) ) ( :action base-left :parameters ( ?r - robot ?cx - xc ?dx - xc ?y - yc ) :precondition ( and ( not-pushing ?r ) ( leftof ?dx ?cx ) ( base-pos ?r ?cx ?y ) ) :effect ( and ( base-pos ?r ?dx ?y ) ( base-obstacle ?dx ?y ) ) ) ( :action base-right :parameters ( ?r - robot ?cx - xc ?dx - xc ?y - yc ) :precondition ( and ( not-pushing ?r ) ( leftof ?cx ?dx ) ( base-pos ?r ?cx ?y ) ) :effect ( and ( base-pos ?r ?dx ?y ) ( base-obstacle ?dx ?y ) ) ) ( :action base-up :parameters ( ?r - robot ?x - xc ?cy - yc ?dy - yc ) :precondition ( and ( not-pushing ?r ) ( above ?dy ?cy ) ( base-pos ?r ?x ?cy ) ) :effect ( and ( base-pos ?r ?x ?dy ) ( base-obstacle ?x ?dy ) ) ) ( :action base-down :parameters ( ?r - robot ?x - xc ?cy - yc ?dy - yc ) :precondition ( and ( not-pushing ?r ) ( above ?cy ?dy ) ( base-pos ?r ?x ?cy ) ) :effect ( and ( base-pos ?r ?x ?dy ) ( base-obstacle ?x ?dy ) ) ) ( :action base-cart-left :parameters ( ?r - robot ?c - cart ?x1 - xc ?x2 - xc ?y - yc ?cx1 - xc ?cx2 - xc ?cy - yc ) :precondition ( and ( pushing ?r ?c ) ( leftof ?x2 ?x1 ) ( leftof ?cx2 ?cx1 ) ( base-pos ?r ?x1 ?y ) ( cart-pos ?c ?cx1 ?cy ) ) :effect ( and ( base-pos ?r ?x2 ?y ) ( cart-pos ?c ?cx2 ?cy ) ( base-obstacle ?x2 ?y ) ( base-obstacle ?cx2 ?cy ) ) ) ( :action base-cart-right :parameters ( ?r - robot ?c - cart ?x1 - xc ?x2 - xc ?y - yc ?cx1 - xc ?cx2 - xc ?cy - yc ) :precondition ( and ( pushing ?r ?c ) ( leftof ?x1 ?x2 ) ( leftof ?cx1 ?cx2 ) ( base-pos ?r ?x1 ?y ) ( cart-pos ?c ?cx1 ?cy ) ) :effect ( and ( base-pos ?r ?x2 ?y ) ( cart-pos ?c ?cx2 ?cy ) ( base-obstacle ?x2 ?y ) ( base-obstacle ?cx2 ?cy ) ) ) ( :action base-cart-up :parameters ( ?r - robot ?c - cart ?x - xc ?y1 - yc ?y2 - yc ?cx - xc ?cy1 - yc ?cy2 - yc ) :precondition ( and ( pushing ?r ?c ) ( above ?y2 ?y1 ) ( above ?cy2 ?cy1 ) ( base-pos ?r ?x ?y1 ) ( cart-pos ?c ?cx ?cy1 ) ) :effect ( and ( base-pos ?r ?x ?y2 ) ( cart-pos ?c ?cx ?cy2 ) ( base-obstacle ?x ?y2 ) ( base-obstacle ?cx ?cy2 ) ) ) ( :action base-cart-down :parameters ( ?r - robot ?c - cart ?x - xc ?y1 - yc ?y2 - yc ?cx - xc ?cy1 - yc ?cy2 - yc ) :precondition ( and ( pushing ?r ?c ) ( above ?y1 ?y2 ) ( above ?cy1 ?cy2 ) ( base-pos ?r ?x ?y1 ) ( cart-pos ?c ?cx ?cy1 ) ) :effect ( and ( base-pos ?r ?x ?y2 ) ( cart-pos ?c ?cx ?cy2 ) ( base-obstacle ?x ?y2 ) ( base-obstacle ?cx ?cy2 ) ) ) ( :action gripper-left :parameters ( ?r - robot ?basex - xc ?basey - yc ?cgxrel - xrel ?dgxrel - xrel ?cgxabs - xc ?dgxabs - xc ?gyrel - yrel ?gyabs - yc ) :precondition ( and ( parked ?r ) ( base-pos ?r ?basex ?basey ) ( gripper-rel ?r ?cgxrel ?gyrel ) ( leftof-rel ?dgxrel ?cgxrel ) ( sum-x ?basex ?cgxrel ?cgxabs ) ( sum-x ?basex ?dgxrel ?dgxabs ) ( sum-y ?basey ?gyrel ?gyabs ) ) :effect ( and ( gripper-rel ?r ?dgxrel ?gyrel ) ( gripper-obstacle ?dgxabs ?gyabs ) ) ) ( :action gripper-right :parameters ( ?r - robot ?basex - xc ?basey - yc ?cgxrel - xrel ?dgxrel - xrel ?cgxabs - xc ?dgxabs - xc ?gyrel - yrel ?gyabs - yc ) :precondition ( and ( parked ?r ) ( base-pos ?r ?basex ?basey ) ( gripper-rel ?r ?cgxrel ?gyrel ) ( leftof-rel ?cgxrel ?dgxrel ) ( sum-x ?basex ?cgxrel ?cgxabs ) ( sum-x ?basex ?dgxrel ?dgxabs ) ( sum-y ?basey ?gyrel ?gyabs ) ) :effect ( and ( gripper-rel ?r ?dgxrel ?gyrel ) ( gripper-obstacle ?dgxabs ?gyabs ) ) ) ( :action gripper-up :parameters ( ?r - robot ?basex - xc ?basey - yc ?gxrel - xrel ?gxabs - xc ?cgyrel - yrel ?dgyrel - yrel ?cgyabs - yc ?dgyabs - yc ) :precondition ( and ( parked ?r ) ( base-pos ?r ?basex ?basey ) ( gripper-rel ?r ?gxrel ?cgyrel ) ( above-rel ?dgyrel ?cgyrel ) ( sum-x ?basex ?gxrel ?gxabs ) ( sum-y ?basey ?cgyrel ?cgyabs ) ( sum-y ?basey ?dgyrel ?dgyabs ) ) :effect ( and ( gripper-rel ?r ?gxrel ?dgyrel ) ( gripper-obstacle ?gxabs ?dgyabs ) ) ) ( :action gripper-down :parameters ( ?r - robot ?basex - xc ?basey - yc ?gxrel - xrel ?gxabs - xc ?cgyrel - yrel ?dgyrel - yrel ?cgyabs - yc ?dgyabs - yc ) :precondition ( and ( parked ?r ) ( base-pos ?r ?basex ?basey ) ( gripper-rel ?r ?gxrel ?cgyrel ) ( above-rel ?cgyrel ?dgyrel ) ( sum-x ?basex ?gxrel ?gxabs ) ( sum-y ?basey ?cgyrel ?cgyabs ) ( sum-y ?basey ?dgyrel ?dgyabs ) ) :effect ( and ( gripper-rel ?r ?gxrel ?dgyrel ) ( gripper-obstacle ?gxabs ?dgyabs ) ) ) ( :action grasp-cart-left :parameters ( ?r - robot ?c - cart ?x - xc ?y - yc ?cx - xc ) :precondition ( and ( not-pushed ?c ) ( base-pos ?r ?x ?y ) ( cart-pos ?c ?cx ?y ) ( leftof ?cx ?x ) ( not-pushing ?r ) ) :effect ( and ( pushing ?r ?c ) ) ) ( :action grasp-cart-right :parameters ( ?r - robot ?c - cart ?x - xc ?y - yc ?cx - xc ) :precondition ( and ( not-pushed ?c ) ( base-pos ?r ?x ?y ) ( cart-pos ?c ?cx ?y ) ( leftof ?x ?cx ) ( not-pushing ?r ) ) :effect ( and ( pushing ?r ?c ) ) ) ( :action grasp-cart-above :parameters ( ?r - robot ?c - cart ?x - xc ?y - yc ?cy - yc ) :precondition ( and ( not-pushed ?c ) ( base-pos ?r ?x ?y ) ( cart-pos ?c ?x ?cy ) ( above ?cy ?y ) ( not-pushing ?r ) ) :effect ( and ( pushing ?r ?c ) ) ) ( :action grasp-cart-below :parameters ( ?r - robot ?c - cart ?x - xc ?y - yc ?cy - yc ) :precondition ( and ( not-pushed ?c ) ( base-pos ?r ?x ?y ) ( cart-pos ?c ?x ?cy ) ( above ?y ?cy ) ( not-pushing ?r ) ) :effect ( and ( pushing ?r ?c ) ) ) ( :action ungrasp-cart :parameters ( ?r - robot ?c - cart ) :precondition ( and ( pushing ?r ?c ) ) :effect ( and ( not-pushing ?r ) ( not-pushed ?c ) ) ) ( :action get-left :parameters ( ?r - robot ?basex - xc ?basey - yc ?gxrel - xrel ?gxabs - xc ?gyrel - yrel ?gyabs - yc ?o - object ?ox - xc ) :precondition ( and ( parked ?r ) ( base-pos ?r ?basex ?basey ) ( gripper-rel ?r ?gxrel ?gyrel ) ( sum-x ?basex ?gxrel ?gxabs ) ( sum-y ?basey ?gyrel ?gyabs ) ( gripper-empty ?r ) ( leftof ?ox ?gxabs ) ( object-pos ?o ?ox ?gyabs ) ) :effect ( and ( holding ?r ?o ) ) ) ( :action get-right :parameters ( ?r - robot ?basex - xc ?basey - yc ?gxrel - xrel ?gxabs - xc ?gyrel - yrel ?gyabs - yc ?o - object ?ox - xc ) :precondition ( and ( parked ?r ) ( base-pos ?r ?basex ?basey ) ( gripper-rel ?r ?gxrel ?gyrel ) ( sum-x ?basex ?gxrel ?gxabs ) ( sum-y ?basey ?gyrel ?gyabs ) ( gripper-empty ?r ) ( leftof ?gxabs ?ox ) ( object-pos ?o ?ox ?gyabs ) ) :effect ( and ( holding ?r ?o ) ) ) ( :action get-up :parameters ( ?r - robot ?basex - xc ?basey - yc ?gxrel - xrel ?gxabs - xc ?gyrel - yrel ?gyabs - yc ?o - object ?oy - yc ) :precondition ( and ( parked ?r ) ( base-pos ?r ?basex ?basey ) ( gripper-rel ?r ?gxrel ?gyrel ) ( sum-x ?basex ?gxrel ?gxabs ) ( sum-y ?basey ?gyrel ?gyabs ) ( gripper-empty ?r ) ( above ?oy ?gyabs ) ( object-pos ?o ?gxabs ?oy ) ) :effect ( and ( holding ?r ?o ) ) ) ( :action get-down :parameters ( ?r - robot ?basex - xc ?basey - yc ?gxrel - xrel ?gxabs - xc ?gyrel - yrel ?gyabs - yc ?o - object ?oy - yc ) :precondition ( and ( parked ?r ) ( base-pos ?r ?basex ?basey ) ( gripper-rel ?r ?gxrel ?gyrel ) ( sum-x ?basex ?gxrel ?gxabs ) ( sum-y ?basey ?gyrel ?gyabs ) ( gripper-empty ?r ) ( above ?gyabs ?oy ) ( object-pos ?o ?gxabs ?oy ) ) :effect ( and ( holding ?r ?o ) ) ) ( :action get-from-cart :parameters ( ?r - robot ?x - xc ?y - yc ?gxrel - xrel ?gyrel - yrel ?o - object ?c - cart ?cx - xc ?cy - yc ) :precondition ( and ( parked ?r ) ( base-pos ?r ?x ?y ) ( gripper-rel ?r ?gxrel ?gyrel ) ( sum-x ?x ?gxrel ?cx ) ( sum-y ?y ?gyrel ?cy ) ( gripper-empty ?r ) ( cart-pos ?c ?cx ?cy ) ( on-cart ?o ?c ) ) :effect ( and ( holding ?r ?o ) ) ) ( :action put-left :parameters ( ?r - robot ?basex - xc ?basey - yc ?gxrel - xrel ?gxabs - xc ?gyrel - yrel ?gyabs - yc ?o - object ?ox - xc ) :precondition ( and ( parked ?r ) ( base-pos ?r ?basex ?basey ) ( gripper-rel ?r ?gxrel ?gyrel ) ( sum-x ?basex ?gxrel ?gxabs ) ( sum-y ?basey ?gyrel ?gyabs ) ( holding ?r ?o ) ( leftof ?ox ?gxabs ) ( surface ?ox ?gyabs ) ) :effect ( and ( object-pos ?o ?ox ?gyabs ) ( gripper-obstacle ?ox ?gyabs ) ( gripper-empty ?r ) ) ) ( :action put-right :parameters ( ?r - robot ?basex - xc ?basey - yc ?gxrel - xrel ?gxabs - xc ?gyrel - yrel ?gyabs - yc ?o - object ?ox - xc ) :precondition ( and ( parked ?r ) ( base-pos ?r ?basex ?basey ) ( gripper-rel ?r ?gxrel ?gyrel ) ( sum-x ?basex ?gxrel ?gxabs ) ( sum-y ?basey ?gyrel ?gyabs ) ( holding ?r ?o ) ( leftof ?gxabs ?ox ) ( surface ?ox ?gyabs ) ) :effect ( and ( object-pos ?o ?ox ?gyabs ) ( gripper-obstacle ?ox ?gyabs ) ( gripper-empty ?r ) ) ) ( :action put-up :parameters ( ?r - robot ?basex - xc ?basey - yc ?gxrel - xrel ?gxabs - xc ?gyrel - yrel ?gyabs - yc ?o - object ?oy - yc ) :precondition ( and ( parked ?r ) ( base-pos ?r ?basex ?basey ) ( gripper-rel ?r ?gxrel ?gyrel ) ( sum-x ?basex ?gxrel ?gxabs ) ( sum-y ?basey ?gyrel ?gyabs ) ( holding ?r ?o ) ( above ?oy ?gyabs ) ( surface ?gxabs ?oy ) ) :effect ( and ( object-pos ?o ?gxabs ?oy ) ( gripper-obstacle ?gxabs ?oy ) ( gripper-empty ?r ) ) ) ( :action put-down :parameters ( ?r - robot ?basex - xc ?basey - yc ?gxrel - xrel ?gxabs - xc ?gyrel - yrel ?gyabs - yc ?o - object ?oy - yc ) :precondition ( and ( parked ?r ) ( base-pos ?r ?basex ?basey ) ( gripper-rel ?r ?gxrel ?gyrel ) ( sum-x ?basex ?gxrel ?gxabs ) ( sum-y ?basey ?gyrel ?gyabs ) ( holding ?r ?o ) ( above ?gyabs ?oy ) ( surface ?gxabs ?oy ) ) :effect ( and ( object-pos ?o ?gxabs ?oy ) ( gripper-obstacle ?gxabs ?oy ) ( gripper-empty ?r ) ) ) ( :action put-on-cart :parameters ( ?r - robot ?x - xc ?y - yc ?gxrel - xrel ?gyrel - yrel ?o - object ?c - cart ?cx - xc ?cy - yc ) :precondition ( and ( parked ?r ) ( base-pos ?r ?x ?y ) ( gripper-rel ?r ?gxrel ?gyrel ) ( sum-x ?x ?gxrel ?cx ) ( sum-y ?y ?gyrel ?cy ) ( cart-pos ?c ?cx ?cy ) ( holding ?r ?o ) ) :effect ( and ( on-cart ?o ?c ) ( gripper-empty ?r ) ) ) ( :action finish-object :parameters ( ?o - object ?x - xc ?y - yc ) :precondition ( and ( object-pos ?o ?x ?y ) ( object-goal ?o ?x ?y ) ) :effect ( and ( object-done ?o ) ) ) )