;; original sequence 1: (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 -76 -75 -74 -73 -72 -71 -70 -69 -68 -67 -66 -65 -64 -63 -62 -61 -60 -59 -58 -57 -56 -27 -26 -44 -43 -42 -41 45 46 47 48 -36 -35 -25 -24 -23 -22 -21 -20 -19 -18 -17 -16 -89 -88 -87 -86 -85 -84 77 78 79 80 81 82 83 90 91 92 93 94 95 96 -55 -54 -53 -105 -104 -103 -102 -101 -100 -99 -98 28 29 30 31 32 33 34 -40 -39 -38 -37 49 50 51 52 -97)
;; original sequence 2: (1 2 3 4 9 10 11 12 13 14 15 -76 -75 -74 -73 -72 -71 -70 -69 -68 -67 -66 -65 -64 -63 -62 -61 -60 -59 -58 -57 -56 -27 -26 -44 -43 -42 -41 45 46 47 48 -36 -35 -25 -24 -23 -22 -21 -20 -19 -18 -17 -16 -90 -89 -88 -87 -86 -85 -84 77 78 79 80 81 82 83 91 92 93 94 95 96 5 6 7 8 -55 -54 -53 -105 -104 -103 -102 -101 -100 -99 -98 28 29 30 31 32 33 34 -40 -39 -38 -37 49 50 51 52 -97)
;; simplified sequence 1: (111 110 106 108 90 109 107)
;; simplified sequence 2: (111 106 -90 108 109 110 107)
;; common subsequences: (((9 10 11 12 13 14 15 -76 -75 -74 -73 -72 -71 -70 -69 -68 -67 -66 -65 -64 -63 -62 -61 -60 -59 -58 -57 -56 -27 -26 -44 -43 -42 -41 45 46 47 48 -36 -35 -25 -24 -23 -22 -21 -20 -19 -18 -17 -16) . 106) ((-55 -54 -53 -105 -104 -103 -102 -101 -100 -99 -98 28 29 30 31 32 33 34 -40 -39 -38 -37 49 50 51 52 -97) . 107) ((-89 -88 -87 -86 -85 -84 77 78 79 80 81 82 83) . 108) ((91 92 93 94 95 96) . 109) ((5 6 7 8) . 110) ((1 2 3 4) . 111))
;; #safe insertions/deletions: 0
;; sequence 1 (names): ((normal sub6) (normal sub5) (normal sub1) (normal sub3) (normal g90) (normal sub4) (normal sub2))
;; sequence 2 (names): ((normal sub6) (normal sub1) (inverted g90) (normal sub3) (normal sub4) (normal sub5) (normal sub2))

(define (problem triodanus-to-legousia) (:domain genome-edit-distance)
        (:objects sub6 sub5 sub4 sub3 sub2 sub1 g90)
        (:init (normal sub6) (normal sub5) (normal sub1) (normal sub3)
               (normal g90) (normal sub4) (normal sub2) (present sub6)
               (present sub5) (present sub1) (present sub3)
               (present g90) (present sub4) (present sub2)
               (cw sub2 sub6) (cw sub4 sub2) (cw g90 sub4)
               (cw sub3 g90) (cw sub1 sub3) (cw sub5 sub1)
               (cw sub6 sub5) (idle) (= (total-cost) 0))
        (:goal (and (normal sub6) (normal sub1) (inverted g90)
                    (normal sub3) (normal sub4) (normal sub5)
                    (normal sub2) (cw sub2 sub6) (cw sub5 sub2)
                    (cw sub4 sub5) (cw sub3 sub4) (cw g90 sub3)
                    (cw sub1 g90) (cw sub6 sub1)))
        (:metric minimize (total-cost)))