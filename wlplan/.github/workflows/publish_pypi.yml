# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package to PyPI

on:
  release:
    types: [created]

jobs:
  deploy:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    environment:
      name: pypi
      url: https://pypi.org/p/wlplan

    if: ${{ github.repository == 'DillonZChen/wlplan' }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine auditwheel pybind11-stubgen
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          mkdir _wlplan
          pip install .
          pybind11-stubgen _wlplan -o .
          touch _wlplan/py.typed
          pip wheel .
          export whl_file=$(find -name "wlplan-*.whl" -type f)
          auditwheel repair $whl_file --plat manylinux_2_34_x86_64 -w wheelhouse/
          export whl_file_new=$(find wheelhouse/ -name "*.whl" -type f)
          echo $whl_file_new
          twine upload $whl_file_new
