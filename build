#!/bin/bash

USAGE_DESCRIPTION="Usage $0 [wlplan|succgen|planners|scorpion|numeric-downward|powerlifted|clean|all]"

# Check number of arguments
if [[ $# -eq 0 ]]; then
    arg="all"
elif [[ $# -eq 1 ]]; then
    arg=$1
else
    echo $USAGE_DESCRIPTION
    exit 1
fi

# Check argument validity
case "$arg" in
wlplan | succgen | planners | scorpion | numeric-downward | powerlifted | clean | all)
    # Valid argument, continue
    ;;
*)
    echo $USAGE_DESCRIPTION
    exit 1
    ;;
esac

# Clean
if [[ "$arg" = "clean" ]]; then
    set -x
    rm -rf ext/wlplan/build
    rm -rf ext/planners/*/builds
    rm -rf ext/planners/succgen/build

    exit 0
fi

# Planners
PLANNERS_DIR="ext/planners"
if [[ "$arg" = "scorpion" ]]; then
    PLANNERS="scorpion"
elif [[ "$arg" = "numeric-downward" ]]; then
    PLANNERS="numeric-downward"
elif [[ "$arg" = "powerlifted" ]]; then
    PLANNERS="powerlifted"
elif [[ "$arg" = "planners" || "$arg" = "all" ]]; then
    PLANNERS="downward numeric-downward powerlifted"
else
    PLANNERS=""
fi

# Exit on the first error
set -e

# Install Python wlplan interface
if [[ "$arg" = "all" || "$arg" = "wlplan" ]]; then
    cd ext/wlplan/
    mkdir -p _wlplan/
    pip install . -v
    cd -
fi

# Install Python succgen interface
if [[ "$arg" = "all" || "$arg" = "succgen" ]]; then
    cd succgen/
    sh install.sh
    cd -
fi

# Build C++ wlplan interface and planners
cd ext/wlplan/
for planner in $PLANNERS; do
    install_dir=../../$PLANNERS_DIR/$planner/src/search/ext/wlplan
    rm -rf $install_dir
    python3 cmake_build.py $install_dir
done
cd -

# Build planners
for planner in $PLANNERS; do
    cd $PLANNERS_DIR/$planner
    if [[ "$arg" = "fresh" ]]; then
        rm -r builds
    fi
    if [[ "$arg" = "numeric-downward" ]]; then
        cd src/search/bliss-0.73
        make clean
        make
        cd -
        python3 build.py -j8 release64
    else
        python3 build.py
    fi
    cd -
done
